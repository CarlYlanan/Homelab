services:
  adguardhome:
    image: 'adguard/adguardhome:latest'
    container_name: 'adguard'
    hostname: 'adguard'
    restart: 'unless-stopped'
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - './work:/opt/adguardhome/work'
      - './config:/opt/adguardhome/conf'
    ports:
      # Plain DNS
      - '53:53/tcp'
      - '53:53/udp'
      # AdGuard Home Admin Panel as well as DNS-over-HTTPS
      - '80:80/tcp'
      - '443:443/tcp'
      - '443:443/udp'
      - '3300:3000/tcp'
      # DNS-over-TLS
      - '853:853/tcp'
      # DNS-over-QUIC
      - '784:784/udp'
      - '853:853/udp'
      - '8853:8853/udp'
      # DNSCrypt
      - '5443:5443/tcp'
      - '5443:5443/udp'

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:nightly # Change to "latest" for stable
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Pacific/Auckland
    volumes:
      - /home/carly/homelab/arr_stack/prowlarr/config:/config
      - /home/carly/homelab/arr_stack/prowlarr/backup:/data/Backup
      - /mnt/4TB/Downloads:/data/downloads
    ports:
      - 9697:9696
    restart: unless-stopped
    networks:
      - arrs

  sonarr:
    image: lscr.io/linuxserver/sonarr:develop # Change to "latest" for stable
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Pacific/Auckland
    volumes:
      - /home/carly/homelab/arr_stack/sonarr/config:/config
      - /home/carly/homelab/arr_stack/sonarr/backup:/data/Backup
      - /mnt/4TB/Downloads/tv-sonarr:/data/sonarr  # <== add root downloads folder here
    ports:
      - 8989:8989
    restart: unless-stopped
    networks:
      - arrs

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Pacific/Auckland
    volumes:
      - /home/carly/homelab/arr_stack/radarr/config:/config
      - /home/carly/homelab/arr_stack/radarr/backup:/data/Backup
      - /mnt/4TB/Downloads/radarr:/data/radarr   # <== add root downloads folder here
    ports:
      - 7878:7878
    restart: unless-stopped
    networks:
      - arrs

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=info
      - TZ=Pacific/Auckland
    ports:
      - "8191:8191"
    restart: unless-stopped

  ombi:
    image: lscr.io/linuxserver/ombi:latest
    container_name: ombi
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - BASE_URL=/ #optional
    volumes:
      - /home/carly/homelab/ombi/config:/config
    ports:
      - 3579:3579
    restart: unless-stopped

  tautulli:
    image: tautulli/tautulli
    container_name: tautulli
    restart: unless-stopped
    volumes:
      - /home/carly/homelab/tautulli:/config
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=NZ
    ports:
      - 8181:8181
    
#
# WARNING: To install Immich, follow our guide: https://immich.app/docs/install/docker-compose
#
# Make sure to use the docker-compose.yml of the current release:
#
# https://github.com/immich-app/immich/releases/latest/download/docker-compose.yml
#
# The compose file on main may not be compatible with the latest release.

  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    # extends:
    #   file: hwaccel.transcoding.yml
    #   service: cpu # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    volumes:
      # Do not edit the next line. If you want to change the media storage location on your system, edit the value of UPLOAD_LOCATION in the .env file
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
      - /mnt/4TB/Recovered_Files/Family_Filtered:/mnt/4TB/Recovered_Files/Family_Filtered
    env_file:
      - stack.env
    ports:
      - '2283:2283'
    depends_on:
      - redis
      - database
    restart: always
    healthcheck:
      disable: false

  immich-machine-learning:
    container_name: immich_machine_learning
    # For hardware acceleration, add one of -[armnn, cuda, rocm, openvino, rknn] to the image tag.
    # Example tag: ${IMMICH_VERSION:-release}-cuda
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
    #   file: hwaccel.ml.yml
    #   service: cpu # set to one of [armnn, cuda, rocm, openvino, openvino-wsl, rknn] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    volumes:
      - model-cache:/cache
    env_file:
      - stack.env
    restart: always
    healthcheck:
      disable: false

  redis:
    container_name: immich_redis
    image: docker.io/valkey/valkey:8-bookworm@sha256:ff21bc0f8194dc9c105b769aeabf9585fea6a8ed649c0781caeac5cb3c247884
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always

  database:
    container_name: immich_postgres
    image: ghcr.io/immich-app/postgres:14-vectorchord0.3.0-pgvectors0.2.0
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
      # Uncomment the DB_STORAGE_TYPE: 'HDD' var if your database isn't stored on SSDs
      # DB_STORAGE_TYPE: 'HDD'
    volumes:
      # Do not edit the next line. If you want to change the database storage location on your system, edit the value of DB_DATA_LOCATION in the .env file
      - ${DB_DATA_LOCATION}:/var/lib/postgresql/data
    restart: always

volumes:
  model-cache:
  deluge:
    image: lscr.io/linuxserver/deluge:latest
    container_name: deluge
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=NZ
    volumes:
      - /home/carly/homelab/deluge/config:/config
      - /mnt/4TB/Downloads:/downloads
    ports:
      - 8112:8112
      - 6881:6881
      - 6881:6881/udp
      - 58846:58846 #optional
    restart: unless-stopped
    
  docmost:
    image: docmost/docmost:latest
    depends_on:
      - db
      - redis
    environment:
      APP_URL: "http://localhost:3000"
      APP_SECRET: "edb392a9e3ca27c560b64253960188efa35c284e344aa950f000c42b7b50faa8"
      DATABASE_URL: "postgresql://docmost:Carl0205@db:5432/docmost?schema=public"
      REDIS_URL: "redis://redis:6379"
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - docmost:/app/data/storage

  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: docmost
      POSTGRES_USER: docmost
      POSTGRES_PASSWORD: Carl0205
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/postgresql/data

  redis:
    image: redis:7.2-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data

volumes:
  docmost:
  db_data:
  redis_data:

networks:
  arrs:
    driver: bridge
    ipam:
      config:
        - subnet: 173.25.0.0/16
          gateway: 173.25.0.1
